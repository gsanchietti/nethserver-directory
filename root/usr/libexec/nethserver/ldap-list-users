#!/usr/bin/perl -w

#
# Copyright (C) 2016 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use JSON;
use esmith::ConfigDB;
use NethServer::Directory;

my $db = esmith::ConfigDB->open_ro() || die("Could not open Config DB");
my $nsDirectory = NethServer::Directory->new() || die('Could not access LDAP Directory');

my %users;

# Handle users with and without domain part
my $domain = $db->get_value('DomainName');
my $age = 9999999999;
my $passexpire = $db->get_prop('passwordstrength', 'PassExpires') || 'yes';
if ($passexpire eq 'yes') {
    $age = $db->get_prop('passwordstrength', 'MaxPassAge');
}
my $now = time();

my @entries = $nsDirectory->search(
    base => 'ou=People,dc=directory,dc=nh',
    filter => '(objectClass=shadowAccount)',
    scope => 'one',
)->entries;

foreach  my $entry ( @entries ) {
    my $locked = 0;
    my $expired = 0;
    my $expires = 'no';
    my $new = 0;
    my $uid = $entry->get_value('uid');
    my $user = $uid.'@'.$domain;
    my $name = $entry->get_value('cn');
    my $pass = $entry->get_value('userPassword');
    my $shadowMax = $entry->get_value('shadowMax');
    my $shadowLastChange = $entry->get_value('shadowLastChange');
    my $shell = $entry->get_value('loginShell');
    my @groups;
    if ($pass =~ /\{CRYPT\}\!+/) {
        $locked = 1;
    }
    if ($pass eq "{CRYPT}!!") {
        $new = 1;
    }
    if ($shadowMax < 99999) {
        my $t = $shadowLastChange * 24 * 60 * 60;
        my $expire_date = $t + ($shadowMax * 24 * 60 * 60);
        if ($expire_date < $now) {
            $expired = 1;
        }
        $expires = 'yes';
    }
    my $tmp = `/usr/bin/groups $user`;
    $tmp =~ s/^$user ://;
    $tmp =~ s/locals\@$domain//; # remove locals group
    $tmp =~ s/^\s+//; # lelft trim
    $tmp =~ s/\s+$//; # right trim
    @groups = split(/\s+/,$tmp);

    $users{$user}{'locked'} = $locked;
    $users{$user}{'expired'} = $expired;
    $users{$user}{'expires'} = $expires;
    $users{$user}{'new'} = $new;
    $users{$user}{'gecos'} = $name;
    $users{$user}{'shell'} = $shell;
    $users{$user}{'groups'} = \@groups;
}

print to_json(\%users);

exit 0;
